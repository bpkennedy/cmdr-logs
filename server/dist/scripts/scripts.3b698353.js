"use strict";angular.module("clientApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngTouch","ui.router","textAngular","toastr","ngAudio","firebase"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/"),a.state("root",{url:"","abstract":!0,resolve:{currentUser:["auth",function(a){return a.$waitForSignIn()}]},views:{"titlebar@":{templateUrl:"views/titlebar.html",controller:"TitlebarCtrl",controllerAs:"vm"}}}),a.state("root.dashboard",{url:"/",data:{pageName:"MainCtrl",browserTitle:"Main"},views:{"container@":{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"vm"},"entry@root.dashboard":{templateUrl:"views/entry.html",controller:"EntryCtrl",controllerAs:"vm"}}}),a.state("root.entry",{url:"/entries/:entryId",parent:"root",params:{isNew:null},data:{pageName:"EntryCtrl",browserTitle:"Entry"},views:{"container@":{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"vm"},"entry@root.entry":{templateUrl:"views/entry.html",controller:"EntryCtrl",controllerAs:"vm"}}}),a.state("root.login",{url:"/login",data:{pageName:"LoginCtrl",browserTitle:"Login"},views:{"container@":{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"vm"}}})}]).config(["$provide",function(a){a.decorator("taOptions",["taRegisterTool","$delegate",function(a,b){return b.toolbar=[["bold","italics","underline","justifyLeft","justifyCenter","justifyRight","h1","h2","h3","p","pre","html","insertImage","insertLink","insertVideo"]],b}])}]).run(["firebaseSvc","$rootScope","$state",function(a,b,c){a.initialize(),b.$on("$stateChangeError",function(a,b,d,e,f,g){("NO USER"===g||"AUTH_REQUIRED"===g)&&(a.preventDefault(),c.go("root.login",{}))})}]),angular.module("clientApp").controller("MainCtrl",["$rootScope","$firebaseArray","$location","$state","entries","toastr","$timeout",function(a,b,c,d,e,f,g){function h(){j()}function i(){d.go("root.entry",{isNew:!0}),g(function(){c.path("/entries/new").replace().notify(!1)},100)}function j(){k.entries=b(e.getUserEntries())}var k=this;k.entries=[],k.goToNewEntry=i,h(),a.$on("getEntries",function(a,b){j(),d.go("root.entry",{entryId:b,isNew:!1})})}]),angular.module("clientApp").factory("firebaseSvc",["$window",function(a){var b,c,d,e=null;return{initialize:function(){var f={apiKey:"AIzaSyC4shLU7c2ldYdctyitLe4qmPv09H3pXk8",authDomain:"cmdr-logs.firebaseapp.com",databaseURL:"https://cmdr-logs.firebaseio.com",storageBucket:"cmdr-logs.appspot.com",messagingSenderId:"375363069051"};b=a.firebase.initializeApp(f),c=a.firebase.storage(),d=a.firebase.auth().onAuthStateChanged(function(a){e=a,console.log("got user..",e)})}}}]),angular.module("clientApp").controller("LoginCtrl",["auth","currentUser","toastr","$window",function(a,b,c,d){function e(){j.auth.$signInWithEmailAndPassword(j.userEmail,j.password).then(function(a){c.success("You signed in.","Success!")})["catch"](function(a){c.error(a.message,a.code)})}function f(){j.auth.$createUserWithEmailAndPassword(j.newUserEmail,j.newPassword).then(function(a){h(j.cmdrName),c.success("New account created.","Success!")})["catch"](function(a){c.error(a.message,a.code)})}function g(){h(j.newCmdrName)}function h(a){var b=d.firebase.auth().currentUser;b.updateProfile({displayName:a}).then(function(){c.success("Updated profile.","Success!")},function(a){c.error(a.message,a.code)})}function i(){j.auth.$signOut().then(function(){c.success("You signed out.","Success!")})["catch"](function(a){c.error(a.message,a.code)})}var j=this;j.auth=a,j.user=b,j.createUser=f,j.updateUser=g,j.login=e,j.signOutUser=i,j.password="",j.userEmail="",j.newUserEmail="",j.newPassword="",j.cmdrName="",j.newCmdrName=""}]),angular.module("clientApp").factory("auth",["$firebaseAuth",function(a){return a()}]),angular.module("clientApp").controller("TitlebarCtrl",["$state","currentUser","$timeout",function(a,b,c){function d(){var b=a.current.name;return"root.entry"===b||"root.dashboard"===b?!0:!1}var e=this;e.user=b,e.isEntry=d}]),angular.module("clientApp").factory("entries",["auth","$firebaseObject","$window","toastr",function(a,b,c,d){function e(){return c.firebase.database().ref("users/"+m.user.uid).child("entries")}function f(a){return c.firebase.database().ref("entries").child(a)}function g(a){return a.$remove().then(function(d){var e=c.firebase.database().ref("/users/"+m.user.uid+"/entries/"+a.$id),f=b(e);return f.$remove()})}function h(a){var b=k();return a.modified_at=b,a.$save().then(function(d){var e=c.firebase.database().ref("/users/"+m.user.uid+"/entries/"+a.$id);return e.update({title:a.title,message:a.message,modified_at:b})})["catch"](function(a){d.error(a.message,a.code)})}function i(a){var b=c.firebase.database().ref("/entries/");return b.push({title:a.title,message:a.message,modified_at:k(),created_at:k(),created_by:m.user.uid}).then(function(b){var c=b.key;return m.lastCreatedUid.key=c,j(a,c)})["catch"](function(a){d.error(a.message,a.code)})}function j(a,b){var d=c.firebase.database().ref("/users/"+m.user.uid+"/entries/");return d.child(b).set({title:a.title,message:a.message,modified_at:k(),created_at:k(),created_by:m.user.uid})}function k(){var a=new Date,b=a.getFullYear(),c=a.getMonth(),d=a.getDate(),e=new Date(b+1286,c,d);return e.getTime()}function l(){return m.lastCreatedUid.key}var m=this;return m.user=a.$getAuth(),m.lastCreatedUid={key:""},{getUserEntries:e,getSingleEntry:f,createEntry:i,deleteEntry:g,updateEntry:h,getRecentNewEntry:l}}]),angular.module("clientApp").controller("EntryCtrl",["$scope","$rootScope","currentUser","$firebaseObject","$sce","$state","$timeout","auth","$stateParams","entries","toastr",function(a,b,c,d,e,f,g,h,i,j,k){function l(){"root.entry"===v.stateName&&(p(),m())}function m(){v.isNew&&n("new")}function n(a){v.isEditMode=!v.isEditMode,"back"===a?(v.tempData.title=null,v.tempData.message=null):"edit"===a?(v.tempData.title=v.data.title,v.tempData.message=v.data.message):"new"===a?(v.tempData.title=u("Entry Title Here.."),v.tempData.message=u('<div style="font-style:italics;">The body of your entry here...</div>')):"save"===a&&(v.tempData.title=null,v.tempData.message=null,v.isNew=!1)}function o(){var a=v.data.$id;j.deleteEntry(v.data).then(function(b){k.success("You deleted entry "+a,"Success!"),f.go("root.dashboard")})["catch"](function(a){k.error(a.message,a.code)})}function p(){v.isEditMode=!1,v.data=d(j.getSingleEntry(v.entryKey))}function q(){v.data.title=v.tempData.title,v.data.message=v.tempData.message,v.isNew?r():s()}function r(){j.createEntry(v.data).then(function(a){k.success("You created a new item.","Success!"),n(),t()})["catch"](function(a){k.error(a.message,a.code)})}function s(){j.updateEntry(v.data).then(function(a){k.success("You updated entry "+v.data.$id,"Success!"),n()})["catch"](function(a){k.error(a.message,a.code)})}function t(){var a=j.getRecentNewEntry();b.$emit("getEntries",a)}function u(a){var b=e.trustAsHtml(a);return b}var v=this;v.entryKey=i.entryId,v.user=c,v.isEditMode=!1,v.isNew=i.isNew||!1,v.stateName=f.current.name,v.toggleEditMode=n,v.deleteEntry=o,v.makeHtmlSafe=u,v.saveProgress=q,a.data={},v.data={key:"",title:"",message:"",date:""},v.tempData={title:null,message:null},l()}]),angular.module("clientApp").directive("smoke",function(){return{template:'<div id="smoke-wrapper"></div>',restrict:"E",link:function(a,b,c){function d(){var a;$(window).on("resize",function(b){clearTimeout(a),a=setTimeout(function(){e();var a=$("<canvas/>",{id:"myCanvas",height:$(window).height(),width:$(window).width()});$("#smoke-wrapper").prepend(a),f()},250)})}function e(){$("canvas").remove(),clearInterval(window.drawInterval)}function f(){function a(a){this.x=0,this.y=0,this.xVelocity=0,this.yVelocity=0,this.radius=5,this.context=a,this.draw=function(){return this.image?void this.context.drawImage(this.image,this.x-128,this.y-128):(this.context.beginPath(),this.context.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),this.context.fillStyle="rgba(0, 255, 255, 1)",this.context.fill(),void this.context.closePath())},this.update=function(){this.x+=this.xVelocity,this.y+=this.yVelocity,this.x>=h?(this.xVelocity=-this.xVelocity,this.x=h):this.x<=0&&(this.xVelocity=-this.xVelocity,this.x=0),this.y>=i?(this.yVelocity=-this.yVelocity,this.y=i):this.y<=0&&(this.yVelocity=-this.yVelocity,this.y=0)},this.setPosition=function(a,b){this.x=a,this.y=b},this.setVelocity=function(a,b){this.xVelocity=a,this.yVelocity=b},this.setImage=function(a){this.image=a}}function b(a,b){return Math.random()*(b-a)+a}function c(){var c=document.getElementById("myCanvas");if(c.getContext){k=c.getContext("2d");for(var g=0;e>g;++g){var j=new a(k);j.setPosition(b(0,h),b(0,i)),j.setVelocity(b(-f,f),b(-f,f)),d.push(j)}}}var d=[],e=40,f=2,g=33,h=$(window).width(),i=$(window).height(),j=new Image;j.onload=function(){d.forEach(function(a){a.setImage(j)})},j.src="../images/Smoke10.794166cc.png";var k;window.draw=function(){k.fillStyle="rgba(0, 0, 0, 0.5)",k.fillRect(0,0,i,h),d.forEach(function(a){a.draw()})},window.update=function(){d.forEach(function(a){a.update()})},c(),k&&(window.drawInterval=setInterval(function(){window.update(),window.draw()},1e3/g))}$(document).ready(function(){d();var a=$("<canvas/>",{id:"myCanvas",height:$(window).height(),width:$(window).width()});$("#smoke-wrapper").prepend(a),f()})}}}),angular.module("clientApp").filter("eliteDate",["$filter",function(a){var b=a("date");return function(a){return b(a,"MMM d, y")}}]),angular.module("clientApp").run(["$templateCache",function(a){a.put("views/entry.html",'<div class="entry-title"> <div class="star-date"> {{vm.data.created_at | eliteDate }} </div> <div class="title-text" ng-if="!vm.isEditMode"> {{vm.data.title}} </div> <div class="" ng-if="vm.isEditMode"> <label for="title-text">Title: </label> <input type="text" if="title-text" class="title-text-input" ng-model="vm.tempData.title"> </div> </div> <div class="separator reading-separator"></div> <div class="reading-body"> <div ng-if="!vm.isEditMode"> <div ta-bind ng-model="vm.data.message"></div> </div> <div ng-if="vm.isEditMode" text-angular ng-model="vm.tempData.message"></div> </div> <div class="reading-actions"> <div class="separator entry"></div> <div class="new-entry edit" ng-click="vm.toggleEditMode(\'edit\')" ng-cloak ng-if="!vm.isEditMode"> <i class="fa fa-pencil"></i> Edit </div> <div class="new-entry edit" ng-click="vm.toggleEditMode(\'back\')" ng-cloak ng-if="vm.isEditMode"> <i class="fa fa-arrow-left"></i> Back </div> <div class="new-entry edit save" ng-click="vm.saveProgress()" ng-cloak ng-if="vm.isEditMode"> <i class="fa fa-floppy-o"></i> Save </div> <div class="new-entry delete" ng-click="vm.deleteEntry(vm.data.key)"> <i class="fa fa-trash-o"></i> Delete </div> </div>'),a.put("views/login.html",'<div class="container"> <p>This is the login view.</p> <div class="well"> <div class=""> Logged in as {{vm.user.email}} </div> <div class="" ng-click="vm.signOutUser()"> Click to sign out user. </div> </div> <div class="well"> Click to try log in. <div class="form"> <div class="form-group"> <label for="userEmail">User Email</label> <input class="form-control" id="userEmail" type="text" name="" value="" ng-model="vm.userEmail"> </div> <div class="form-group"> <label for="password">Password</label> <input class="form-control" type="text" id="password" name="" value="" ng-model="vm.password"> </div> </div> <div class="btn btn-primary" ng-click="vm.login()"> LOGIN </div> </div> <div class="well"> Click to try creating a user. <div class="form"> <div class="form-group"> <label for="newUserEmail">New User\'s email</label> <input class="form-control" id="newUserEmail" type="text" name="" value="" ng-model="vm.newUserEmail"> </div> <div class="form-group"> <label for="newPassword">Password</label> <input class="form-control" type="text" id="newPassword" name="" value="" ng-model="vm.newPassword"> </div> <div class="form-group"> <label for="cmdrName">Commander Name</label> <input class="form-control" id="cmdrName" type="text" name="" value="" ng-model="vm.cmdrName"> </div> </div> <div class="btn btn-danger" ng-click="vm.createUser()"> LOGIN </div> </div> <div class="well"> Update your profile <div class="form"> <div class="form-group"> <label for="newCmdrName">New Commander Name</label> <input class="form-control" id="newCmdrName" type="text" name="" value="" ng-model="vm.newCmdrName"> </div> </div> <div class="btn btn-danger" ng-click="vm.updateUser()"> SAVE </div> </div> </div>'),a.put("views/main.html",'<div class="main-wrapper"> <div class="sidebar"> <div class="sidebar-title"> Journal Entries </div> <div class="separator"></div> <ul class="journal-list"> <li ng-repeat="entry in vm.entries" ui-sref="root.entry({entryId: entry.$id, isNew: false})"> <div class="entry-text"> {{entry.title}} </div> <div class="entry-date"> {{entry.created_at | date:\'MMM d, y\'}} </div> </li> </ul> <div class="new-entry" ng-click="vm.goToNewEntry()"> <i class="fa fa-plus"></i> New Entry </div> </div> <div class="vertical-separator"></div> <div class="reading-pane"> <div id="entry-wrapper" ui-view="entry"></div> </div> </div>'),a.put("views/titlebar.html",'<!-- Add your site or application content here --> <div class="titlebar-wrapper"> <div class="nav-top"></div> <div class="navbar navbar-default" role="navigation"> <div class=""> <div class="navbar-header"> </div> <div class="" id=""> <ul class="nav navbar-nav"> <li ng-class="{active: vm.isEntry()}"> <a ui-sref="root.dashboard">CMDR Logs</a> </li> <li ng-if="!vm.user" ui-sref-active="active"> <a ui-sref="root.login">Login</a> </li> <li ng-if="vm.user" ui-sref-active="active"> <a ui-sref="root.login">{{vm.user.displayName || \'COMMANDER\'}}</a> </li> </ul> </div> </div> </div> <div class="nav-bottom"></div> </div>')}]);